version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: gateway-postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      TZ: UTC
    volumes:
      - ./infra-local/postgres/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backup
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - gateway-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    image: gateway-backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gateway-backend
    restart: always
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      CORS_ORIGIN: ${CORS_ORIGIN}
      UPLOAD_MAX_SIZE: ${UPLOAD_MAX_SIZE:-104857600}
      CACHE_TTL: ${CACHE_TTL:-3600}
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    volumes:
      - uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gateway-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    image: gateway-frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        API_URL: ${API_URL:-http://localhost:3000}
    container_name: gateway-frontend
    restart: always
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      - backend
    networks:
      - gateway-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:alpine
    container_name: gateway-nginx
    restart: always
    ports:
      - "${NGINX_PORT:-443}:443"
      - "${NGINX_HTTP_PORT:-80}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - gateway-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local
  uploads:
    driver: local
  nginx_cache:
    driver: local

networks:
  gateway-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16